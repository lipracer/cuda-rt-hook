# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

notifications:
  email: false

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - sudo: required
            services:
              - docker
            env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64
                 PLAT=manylinux1_x86_64
          - sudo: required
            services:
              - docker
            env: DOCKER_IMAGE=quay.io/pypa/manylinux1_i686
                 PRE_CMD=linux32
                 PLAT=manylinux1_i686
          - sudo: required
            services:
              - docker
            env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_x86_64
                 PLAT=manylinux2010_x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: docker pull $DOCKER_IMAGE

      - name: Build package
        run: docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/script/build-wheels.sh

      - name: Show wheelhouse contents
        run: ls wheelhouse/

      - name: Create dist directory
        run: mkdir dist

      - name: Copy wheels to dist
        run: cp wheelhouse/* dist

      - name: Publish package
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1.8
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
